/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const ManuscriptStrcountIndexLazyImport = createFileRoute(
  '/manuscript-strcount/',
)()
const ManuscriptStrcountAboutLazyImport = createFileRoute(
  '/manuscript-strcount/about',
)()

// Create/Update Routes

const ManuscriptStrcountIndexLazyRoute =
  ManuscriptStrcountIndexLazyImport.update({
    path: '/manuscript-strcount/',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/manuscript-strcount/index.lazy').then((d) => d.Route),
  )

const ManuscriptStrcountAboutLazyRoute =
  ManuscriptStrcountAboutLazyImport.update({
    path: '/manuscript-strcount/about',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/manuscript-strcount/about.lazy').then((d) => d.Route),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/manuscript-strcount/about': {
      id: '/manuscript-strcount/about'
      path: '/manuscript-strcount/about'
      fullPath: '/manuscript-strcount/about'
      preLoaderRoute: typeof ManuscriptStrcountAboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/manuscript-strcount/': {
      id: '/manuscript-strcount/'
      path: '/manuscript-strcount'
      fullPath: '/manuscript-strcount'
      preLoaderRoute: typeof ManuscriptStrcountIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/manuscript-strcount/about': typeof ManuscriptStrcountAboutLazyRoute
  '/manuscript-strcount': typeof ManuscriptStrcountIndexLazyRoute
}

export interface FileRoutesByTo {
  '/manuscript-strcount/about': typeof ManuscriptStrcountAboutLazyRoute
  '/manuscript-strcount': typeof ManuscriptStrcountIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/manuscript-strcount/about': typeof ManuscriptStrcountAboutLazyRoute
  '/manuscript-strcount/': typeof ManuscriptStrcountIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/manuscript-strcount/about' | '/manuscript-strcount'
  fileRoutesByTo: FileRoutesByTo
  to: '/manuscript-strcount/about' | '/manuscript-strcount'
  id: '__root__' | '/manuscript-strcount/about' | '/manuscript-strcount/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  ManuscriptStrcountAboutLazyRoute: typeof ManuscriptStrcountAboutLazyRoute
  ManuscriptStrcountIndexLazyRoute: typeof ManuscriptStrcountIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  ManuscriptStrcountAboutLazyRoute: ManuscriptStrcountAboutLazyRoute,
  ManuscriptStrcountIndexLazyRoute: ManuscriptStrcountIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/manuscript-strcount/about",
        "/manuscript-strcount/"
      ]
    },
    "/manuscript-strcount/about": {
      "filePath": "manuscript-strcount/about.lazy.tsx"
    },
    "/manuscript-strcount/": {
      "filePath": "manuscript-strcount/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
